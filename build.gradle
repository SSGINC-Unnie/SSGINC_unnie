plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

bootJar {
    enabled = false
}
bootWar {
    enabled = true
}



group = 'com.ssginc'
version = '0.0.1-SNAPSHOT'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(ProcessResources) {
    filteringCharset = 'UTF-8'
}


tasks.withType(Test) {
    systemProperty 'file.encoding', 'UTF-8'
}

tasks.withType(JavaExec) {
    systemProperty 'file.encoding', 'UTF-8'
}

tasks.withType(JavaExec) {
    jvmArgs '-Dfile.encoding=UTF-8'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {
    //************************************************************************
    //  template engine-thymeleaf
    //************************************************************************
    // thymeleaf - http body에 결과를 넣어주기 위한 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.0'

    //************************************************************************
    //  spring boot core
    //************************************************************************
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    // SMTP
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // 개발시에만 내장된 tomcat을 사용하고
    // 배포시에는 외부 tomcat이 있어 배포파일은 war파일에는 포함시키지 않겠다는 의미
    // 배포파일 war파일에 포함하고자 하는 경우 implementation으로 변경

    // spring-boot-starter는
    // implementation 'org.springframework.boot:spring-boot-starter-logging'를 포함함.
    // slf4j의 구현체인 log-back을 사용함.
    implementation 'org.springframework.boot:spring-boot-starter'
    //
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    //************************************************************************
    //  lombok-vo-log
    //************************************************************************
    // Lombok
    // vo(dto) 자동 생성 기능 + log를 위한 Log4J, Slf4j를 사용할 수 있게 함.
    implementation 'org.projectlombok:lombok:1.18.30'
    // 페이지네이션 목적
    annotationProcessor 'org.projectlombok:lombok:1.18.30'


    //************************************************************************
    //  spring security
    //************************************************************************
    // password암호화
    // Spring Security의 Crypto 모듈
    implementation 'org.springframework.security:spring-security-crypto:6.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // JWT 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //************************************************************************
    //  db-mybatis-mysql-hikari
    //************************************************************************
    // db연결
    implementation 'mysql:mysql-connector-java:8.0.33' // 최신 버전 사용
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'


    //************************************************************************
    //  coolSMS
    //************************************************************************
    // sms 인증
    implementation 'net.nurigo:sdk:4.3.2'

    //************************************************************************
    //  actuator
    //************************************************************************
    //implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //************************************************************************
    //  Redis
    //************************************************************************
    // Spring Boot Starter Data Redis (includes spring-data-redis and Lettuce client)
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //************************************************************************
    //  파일 MIME 타입 검증 Apache Tika
    //************************************************************************
    implementation 'org.apache.tika:tika-core:3.1.0'


    //************************************************************************
    //  HTML 파서 용도의 JSoup
    //************************************************************************
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation 'org.jsoup:jsoup:1.18.3'

    //************************************************************************
    // JSON 데이터를 생성, 파싱, 수정하는 용도
    //************************************************************************
    implementation 'org.json:json:20210307'


    //************************************************************************
    // mybatis 페이징 처리 편의성 향상 위한 pagehelper
    //************************************************************************
    // https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper-spring-boot-starter
    implementation 'com.github.pagehelper:pagehelper-spring-boot-starter:2.1.0'

    //************************************************************************
    // kafka 라이브러리
    //************************************************************************
    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'  // WebClient 사용용


    ////////////////////////////////////////////////////////////////////////////
    //************************************************************************
    // Spring Boot Test
    //************************************************************************
    ////////////////////////////////////////////////////////////////////////////

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // JUnit, Mockito, AssertJ 등 기본적인 테스트 라이브러리를 포함됨.
    // 생략 가능
    // testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // lombok을 이용해 Junit 테스트를 진행하는 경우 추가
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Minidev JSON (for JSONArray and JSONObject)
    implementation 'org.json:json:20210307'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation 'org.springframework.security:spring-security-test'

}


tasks.named('test') {
    useJUnitPlatform()
}


build.dependsOn bootWar
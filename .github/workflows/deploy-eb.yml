name: Deploy to AWS Elastic Beanstalk
on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2
  EB_APPLICATION_NAME: unnieuttae
  EB_ENVIRONMENT_NAME: unnieuttae-prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build WAR
        run: ./gradlew bootWar -x test --no-daemon

      - name: Show build artifacts
        run: ls -al build/libs || true

      - name: Find WAR path
        id: findwar
        shell: bash
        run: |
          war=$(ls -1 build/libs/*.war 2>/dev/null | grep -v 'plain.war' | head -n1)
          if [[ -z "$war" ]]; then
            echo "No WAR found in build/libs"; exit 1
          fi
          echo "WAR file: $war"
          echo "war=$war" >> "$GITHUB_OUTPUT"
          
      - name: Prepare EB bundle (zip)
        run: |
          set -eux
          rm -rf deploy bundle.zip
          mkdir -p deploy
          cp "${{ steps.findwar.outputs.war }}" deploy/application.war
        
          if [ -d ".ebextensions" ]; then
            cp -r .ebextensions deploy/.ebextensions
          else
            echo "::warning::.ebextensions directory not found at repo root"
          fi
        
          if [ -d ".platform" ]; then
            cp -r .platform deploy/.platform
          fi

          (cd deploy && zip -r ../bundle.zip .)
        
          echo "Bundle content:"
          unzip -l bundle.zip

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          application_name: ${{ env.EB_APPLICATION_NAME }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          region: ${{ env.AWS_REGION }}
          version_label:     ${{ github.sha }}-${{ github.run_number }}
          deployment_package: bundle.zip
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
